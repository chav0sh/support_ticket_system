name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.1
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

  lint:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.1
          bundler-cache: true

      - name: Install dependencies
        run: bundle install && bundle show

      - name: Run Overcommit
        run: |
          bundle exec overcommit --sign
          bundle exec overcommit --sign pre-commit
          SKIP=AuthorName,AuthorEmail bundle exec overcommit --run

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.7-alpine
        env:
          POSTGRES_DB: support_ticket_system_test
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: "123123"
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U runner -d support_ticket_system_test"
          --health-interval 5s
          --health-timeout 10s
          --health-retries 10

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://runner:123123@postgres:5432/support_ticket_system_test
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_DB: support_ticket_system_test
      POSTGRES_USER: runner
      POSTGRES_PASSWORD: "123123"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.1
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: üîç Debug Running Containers
        run: docker ps -a  # ‚úÖ Check if PostgreSQL is actually running

      - name: üîç Show PostgreSQL Logs
        run: docker logs $(docker ps -q --filter ancestor=postgres) || echo "‚ö†Ô∏è No logs available"

      - name: üîç Wait for PostgreSQL to become ready
        run: |
          for i in {1..20}; do
            pg_isready -h postgres -p 5432 -U runner && exit 0 || (echo "‚è≥ Waiting for PostgreSQL... Attempt $i" && sleep 3)
          done
          echo "‚ùå PostgreSQL did not start in time" && exit 1

      - name: üîç Check PostgreSQL Port
        run: netstat -an | grep 5432 || echo "‚ö†Ô∏è Port 5432 is NOT open"

      - name: Set up database
        run: RAILS_ENV=test bundle exec rake db:create db:schema:load

      - name: Run tests
        run: bundle exec rspec test/dummy/spec
